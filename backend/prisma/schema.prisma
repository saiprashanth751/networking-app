// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  firstName String
  lastName String?
  email String @unique
  password String
  verified Boolean @default(false)
  isOnline Boolean @default(false)
  profile Profile?
  posts Post[]
  createdAt DateTime @default(now())

  messageSent Message[] @relation("MessageSent")
  messageReceived Message[] @relation("MessageReceived")
  followers Follow[] @relation(name: "followers")
  following Follow[] @relation(name: "following")
}

model Profile {
  id String @id @default(uuid())
  bio String?
  profilePic String?
  department String
  graduationYear Int
  minor String
  linkedin String?
  github String?
  leetcode String?
  codeforces String?
  geekforgeeks String?
  user User @relation(fields: [userId], references: [id])
  userId String @unique
  createdAt DateTime @default(now())
}

model Follow {
  id String @id @default(uuid())
  follower User @relation(fields: [followerId] , references: [id], name: "followers")
  followerId String
  following User @relation(fields: [followingId], references: [id], name: "following")
  followingId String

  @@unique([followerId, followingId])
}

model Post{
  id String @id @default(uuid())
  title String
  description String
  labels String[]
  photos String[]
  links String[]
  userId String
  user User @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Message{
  id String @id @default(uuid())
  senderId String
  receiverId String
  content String
  timestamp DateTime @default(now())
  read Boolean @default(false)

  sender User @relation("MessageSent", fields: [senderId], references: [id])
  receiver User @relation("MessageReceived", fields: [receiverId], references: [id])

  @@index([senderId,receiverId])
}